@page "/categories"

@inject ICategoryService _categoryService
@inject IJSRuntime _js

<Modal 
  OnModalConfirmation="DeleteCategoryAsync" 
  Title="Confirm delete" 
  Body="Are you sure you want to delete this category?"
  ConfirmButtonStyle="btn-danger"
  ConfirmButtonText="Delete"></Modal>

@if (_loading)
{
  <div class="position-absolute w-75 h-75 d-flex flex-column align-items-center bg-white justify-content-center">
      <img src="images/loading.gif" alt="Loading categories"/>
  </div>
}
else
{
  <div class="card shadow border-0 mt-4">
    <div class="card-header bg-black bg-gradient ml-0 py-3">
      <div class="row">
        <div class="col-12 text-center">
          <h2 class="text-white py-2">Categories</h2>
        </div>
      </div>
    </div>
  </div>
  <div class="card-body p-4">
    <div class="row pb-3">
      <div class="col-12 text-end">
        <a href="categories/create" class="btn btn-secondary btn-lg" style="width:250px">
          <i class="bi bi-plus-square"></i>
          New Category
        </a>
      </div>
    </div>
    @if (_categories.Any())
    {
      <table class="table table-striped table-bordered">
        <thead>
        <tr>
          <th>Name</th>
          <th></th>
        </tr>
        </thead>
        <tbody>
          @foreach (var category in _categories)
          {
            <tr>
              <td>@category.Name</td>
              <td>
                <a href="@($"categories/update/{category.Id}")" class="btn btn-primary">
                  <i class="bi bi-pencil-square"></i>
                  Edit
                </a>
                <button class="btn btn-danger" @onclick="() => OnDeleteClicked(category.Id)">
                  <i class="bi bi-trash3"></i>
                  Delete
                </button>
              </td>
            </tr>
          }
        </tbody>
      </table>
    }
  </div>
}

@code {
    private bool _loading { get; set; } = true;
    private IReadOnlyCollection<Category> _categories { get; set; } = new List<Category>();
    private int _deleteCategoryId = 0;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender)
        {
            return;
        }

        await LoadCategoriesAsync();
        _loading = false;
        StateHasChanged();
    }

    private async Task LoadCategoriesAsync()
    {
        _categories = await _categoryService.GetAllAsync();
    }

    private async Task OnDeleteClicked(int id)
    {
        _deleteCategoryId = id;
        await _js.InvokeVoidAsync("showConfirmationModal");
    }

    private async Task DeleteCategoryAsync(bool confirmed)
    {
        _loading = true;
        await _js.InvokeVoidAsync("hideConfirmationModal");

        if (confirmed && _deleteCategoryId != 0)
        {
            var deleted = await _categoryService.DeleteCategoryAsync(_deleteCategoryId);

            if (deleted)
            {
                await _js.ToastrSuccess("Category successfully deleted.");
            }
            else
            {
                await _js.ToastrError("Category could not be deleted.");
            }

            await LoadCategoriesAsync();
        }

        _deleteCategoryId = 0;
        _loading = false;
    }

}
